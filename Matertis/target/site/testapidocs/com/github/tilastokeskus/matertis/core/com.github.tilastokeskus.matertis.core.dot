#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version R5_6 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="arial",fontsize=10,labelfontname="arial",labelfontsize=10];
	node [fontname="arial",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// com.github.tilastokeskus.matertis.core.TetrominoTest
	c24 [label=<<table title="com.github.tilastokeskus.matertis.core.TetrominoTest" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./TetrominoTest.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> TetrominoTest </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + TetrominoTest() </td></tr>
<tr><td align="left" balign="left"> + setUpClass() </td></tr>
<tr><td align="left" balign="left"> + tearDownClass() </td></tr>
<tr><td align="left" balign="left"> + setUp() </td></tr>
<tr><td align="left" balign="left"> + tearDown() </td></tr>
<tr><td align="left" balign="left"> + constructor_shouldThrowExceptionWithUnevenLayoutDimensions1() </td></tr>
<tr><td align="left" balign="left"> + constructor_shouldThrowExceptionWithUnevenLayoutDimensions2() </td></tr>
<tr><td align="left" balign="left"> + constructor_shouldThrowExceptionWithNullLayout() </td></tr>
<tr><td align="left" balign="left"> + constructor_shouldThrowExceptionWithEmptyLayout() </td></tr>
<tr><td align="left" balign="left"> + constructor_shouldThrowExceptionWithPartlyEmptyLayout() </td></tr>
<tr><td align="left" balign="left"> + constructor_shouldNotThrowExceptionWithEvenLayoutDimensions() </td></tr>
<tr><td align="left" balign="left"> + constructor_shouldSetIdentifier() </td></tr>
<tr><td align="left" balign="left"> + constructor_shouldSetLayout() </td></tr>
<tr><td align="left" balign="left"> + constructor_shouldInitializePositionTo0() </td></tr>
<tr><td align="left" balign="left"> + method_move_shouldMoveTetrominoCorrectly() </td></tr>
		</table></td></tr>
		</table>>, URL="./TetrominoTest.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// com.github.tilastokeskus.matertis.core.TetrominoRotationTest
	c25 [label=<<table title="com.github.tilastokeskus.matertis.core.TetrominoRotationTest" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./TetrominoRotationTest.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> TetrominoRotationTest </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + TetrominoRotationTest() </td></tr>
<tr><td align="left" balign="left"> + setUpClass() </td></tr>
<tr><td align="left" balign="left"> + tearDownClass() </td></tr>
<tr><td align="left" balign="left"> + setUp() </td></tr>
<tr><td align="left" balign="left"> + tearDown() </td></tr>
<tr><td align="left" balign="left"> + method_rotateCW_shouldRotateTetromino1() </td></tr>
<tr><td align="left" balign="left"> + method_rotateCW_shouldRotateTetromino2() </td></tr>
<tr><td align="left" balign="left"> + method_rotateCW_shouldRotateTetromino3() </td></tr>
<tr><td align="left" balign="left"> + method_rotateCCW_shouldRotateTetromino1() </td></tr>
<tr><td align="left" balign="left"> + method_rotateCCW_shouldRotateTetromino2() </td></tr>
<tr><td align="left" balign="left"> + method_rotateCCW_shouldRotateTetromino3() </td></tr>
		</table></td></tr>
		</table>>, URL="./TetrominoRotationTest.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// com.github.tilastokeskus.matertis.core.TetrominoFactoryTest
	c26 [label=<<table title="com.github.tilastokeskus.matertis.core.TetrominoFactoryTest" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./TetrominoFactoryTest.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> TetrominoFactoryTest </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + TetrominoFactoryTest() </td></tr>
<tr><td align="left" balign="left"> + setUpClass() </td></tr>
<tr><td align="left" balign="left"> + tearDownClass() </td></tr>
<tr><td align="left" balign="left"> + setUp() </td></tr>
<tr><td align="left" balign="left"> + tearDown() </td></tr>
<tr><td align="left" balign="left"> + method_getRandomTetromino_returnedTetrominoShouldNotEverBeNull() </td></tr>
		</table></td></tr>
		</table>>, URL="./TetrominoFactoryTest.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// com.github.tilastokeskus.matertis.core.ScoreHandlerTest
	c27 [label=<<table title="com.github.tilastokeskus.matertis.core.ScoreHandlerTest" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ScoreHandlerTest.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ScoreHandlerTest </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ScoreHandlerTest() </td></tr>
<tr><td align="left" balign="left"> + setUpClass() </td></tr>
<tr><td align="left" balign="left"> + tearDownClass() </td></tr>
<tr><td align="left" balign="left"> + setUp() </td></tr>
<tr><td align="left" balign="left"> + tearDown() </td></tr>
<tr><td align="left" balign="left"> + constructor_shouldSetScoreToZero() </td></tr>
<tr><td align="left" balign="left"> + method_notifyLinesCleared_shouldUpdateScoreAndLevelCorrectly() </td></tr>
		</table></td></tr>
		</table>>, URL="./ScoreHandlerTest.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// com.github.tilastokeskus.matertis.core.GridTestUtils
	c28 [label=<<table title="com.github.tilastokeskus.matertis.core.GridTestUtils" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./GridTestUtils.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> GridTestUtils </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + GridTestUtils() </td></tr>
<tr><td align="left" balign="left"> + getGridLayout(grid : GameGrid) : int[][] </td></tr>
<tr><td align="left" balign="left"> + setGridLayout(grid : GameGrid, layout : int[][]) </td></tr>
<tr><td align="left" balign="left"> + createGridFromLayout(layout : int[][]) : GameGrid </td></tr>
		</table></td></tr>
		</table>>, URL="./GridTestUtils.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// com.github.tilastokeskus.matertis.core.GridTest
	c29 [label=<<table title="com.github.tilastokeskus.matertis.core.GridTest" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./GridTest.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> GridTest </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + GridTest() </td></tr>
<tr><td align="left" balign="left"> + setUpClass() </td></tr>
<tr><td align="left" balign="left"> + tearDownClass() </td></tr>
<tr><td align="left" balign="left"> + setUp() </td></tr>
<tr><td align="left" balign="left"> + tearDown() </td></tr>
<tr><td align="left" balign="left"> + method_isOutOfBounds_shouldReturnFalseWhenPointIsInBounds() </td></tr>
<tr><td align="left" balign="left"> + method_isOutOfBounds_shouldReturnTrueWhenPointIsOutOfBounds() </td></tr>
<tr><td align="left" balign="left"> + method_dropRowsDownFromIndex_shouldDropRowsCorrectly1() </td></tr>
<tr><td align="left" balign="left"> + method_dropRowsDownFromIndex_shouldDropRowsCorrectly2() </td></tr>
<tr><td align="left" balign="left"> + method_handleFilledRows_shouldDetectAndHandleFilledRows1() </td></tr>
<tr><td align="left" balign="left"> + method_handleFilledRows_shouldDetectAndHandleFilledRows2() </td></tr>
<tr><td align="left" balign="left"> + method_handleFilledRows_shouldReturnCorrectAmountOfRows() </td></tr>
		</table></td></tr>
		</table>>, URL="./GridTest.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// com.github.tilastokeskus.matertis.core.GridSettingTest
	c30 [label=<<table title="com.github.tilastokeskus.matertis.core.GridSettingTest" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./GridSettingTest.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> GridSettingTest </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + GridSettingTest() </td></tr>
<tr><td align="left" balign="left"> + setUpClass() </td></tr>
<tr><td align="left" balign="left"> + tearDownClass() </td></tr>
<tr><td align="left" balign="left"> + setUp() </td></tr>
<tr><td align="left" balign="left"> + tearDown() </td></tr>
<tr><td align="left" balign="left"> + method_setTetromino_shouldPositionTetrominoInGridCorrectly1() </td></tr>
<tr><td align="left" balign="left"> + method_setTetromino_shouldPositionTetrominoInGridCorrectly2() </td></tr>
<tr><td align="left" balign="left"> + method_setTetromino_shouldPositionTetrominoInGridCorrectly3() </td></tr>
		</table></td></tr>
		</table>>, URL="./GridSettingTest.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// com.github.tilastokeskus.matertis.core.GridCollisionTest
	c31 [label=<<table title="com.github.tilastokeskus.matertis.core.GridCollisionTest" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./GridCollisionTest.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> GridCollisionTest </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + GridCollisionTest() </td></tr>
<tr><td align="left" balign="left"> + setUpClass() </td></tr>
<tr><td align="left" balign="left"> + tearDownClass() </td></tr>
<tr><td align="left" balign="left"> + setUp() </td></tr>
<tr><td align="left" balign="left"> + tearDown() </td></tr>
<tr><td align="left" balign="left"> + method_tetrominoCollides_shouldDetectCollision1() </td></tr>
<tr><td align="left" balign="left"> + method_tetrominoCollides_shouldDetectCollision2() </td></tr>
<tr><td align="left" balign="left"> + method_tetrominoCollides_shouldDetectCollision3() </td></tr>
<tr><td align="left" balign="left"> + method_tetrominoCollides_shouldDetectCollision4() </td></tr>
		</table></td></tr>
		</table>>, URL="./GridCollisionTest.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// com.github.tilastokeskus.matertis.core.GameTestUtils
	c32 [label=<<table title="com.github.tilastokeskus.matertis.core.GameTestUtils" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./GameTestUtils.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> GameTestUtils </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + GameTestUtils() </td></tr>
<tr><td align="left" balign="left"> + setGameFallingTetromino(game : Game, tetromino : Tetromino) </td></tr>
		</table></td></tr>
		</table>>, URL="./GameTestUtils.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// com.github.tilastokeskus.matertis.core.GameTest
	c33 [label=<<table title="com.github.tilastokeskus.matertis.core.GameTest" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./GameTest.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> GameTest </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + GameTest() </td></tr>
<tr><td align="left" balign="left"> + setUpClass() </td></tr>
<tr><td align="left" balign="left"> + tearDownClass() </td></tr>
<tr><td align="left" balign="left"> + setUp() </td></tr>
<tr><td align="left" balign="left"> + tearDown() </td></tr>
<tr><td align="left" balign="left"> + constructor_shouldInitGrid() </td></tr>
<tr><td align="left" balign="left"> + constructor_shouldInitWidthAndHeightCorrectly() </td></tr>
<tr><td align="left" balign="left"> + constructor_shouldInitTetrominoes() </td></tr>
<tr><td align="left" balign="left"> + constructor_shouldInitFallingTetrominoToMiddle() </td></tr>
<tr><td align="left" balign="left"> + method_moveFallingTetromino_shouldMoveTetromino() </td></tr>
<tr><td align="left" balign="left"> + method_moveFallingTetromino_shouldNotMoveTetrominoOnCollision1() </td></tr>
<tr><td align="left" balign="left"> + method_moveFallingTetromino_shouldNotMoveTetrominoOnCollision2() </td></tr>
<tr><td align="left" balign="left"> + method_playRound_shouldReturnCorrectAmountOfClearedRows() </td></tr>
<tr><td align="left" balign="left"> + method_playRound_shouldSpawnNewTetrominoWhenCurrentHitsTheGround() </td></tr>
<tr><td align="left" balign="left"> + method_playRound_shouldSpawnNewTetrominoToMiddleWhenCurrentHitsTheGround() </td></tr>
<tr><td align="left" balign="left"> + method_dropFallingTetromino_shouldDropTetrominoCorrectly() </td></tr>
<tr><td align="left" balign="left"> + method_rotateFallingTetromino_shouldRotateTetrominoWhenNotColliding() </td></tr>
<tr><td align="left" balign="left"> + method_rotateFallingTetromino_shouldNotRotateTetrominoWhenColliding() </td></tr>
<tr><td align="left" balign="left"> + method_spawnNewTetromino_correctlySpawnsAndPositionsNewTetromino() </td></tr>
		</table></td></tr>
		</table>>, URL="./GameTest.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// com.github.tilastokeskus.matertis.core.GameHandlerTest
	c34 [label=<<table title="com.github.tilastokeskus.matertis.core.GameHandlerTest" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./GameHandlerTest.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> GameHandlerTest </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + GameHandlerTest() </td></tr>
<tr><td align="left" balign="left"> + setUpClass() </td></tr>
<tr><td align="left" balign="left"> + tearDownClass() </td></tr>
<tr><td align="left" balign="left"> + setUp() </td></tr>
<tr><td align="left" balign="left"> + tearDown() </td></tr>
<tr><td align="left" balign="left"> + method_startGame_shouldScheduleRound() </td></tr>
<tr><td align="left" balign="left"> + method_startGame_shouldNotifyObserversWithStartMessage() </td></tr>
<tr><td align="left" balign="left"> + method_terminateGame_shouldShutdownScheduledExecutors() </td></tr>
<tr><td align="left" balign="left"> + method_terminateGame_shouldSendEndMessageToObservers() </td></tr>
<tr><td align="left" balign="left"> + method_togglePause_shouldTogglePauseState() </td></tr>
<tr><td align="left" balign="left"> + method_togglePause_shouldSendPauseMessageToObserversWhenPaused() </td></tr>
<tr><td align="left" balign="left"> + method_togglePause_shouldSendResumeMessageToObserversWhenResumed() </td></tr>
<tr><td align="left" balign="left"> + method_reset_doesShutdownExecutors() </td></tr>
<tr><td align="left" balign="left"> + method_restartGame_doesReset() </td></tr>
<tr><td align="left" balign="left"> + method_restartGame_doesSetNewGame() </td></tr>
<tr><td align="left" balign="left"> + method_restartGame_doesSetNewScoreHandler() </td></tr>
<tr><td align="left" balign="left"> + method_restartGame_doesNotifyObservers() </td></tr>
		</table></td></tr>
		</table>>, URL="./GameHandlerTest.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// com.github.tilastokeskus.matertis.core.GameHandlerConstructorTest
	c35 [label=<<table title="com.github.tilastokeskus.matertis.core.GameHandlerConstructorTest" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./GameHandlerConstructorTest.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> GameHandlerConstructorTest </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + GameHandlerConstructorTest() </td></tr>
<tr><td align="left" balign="left"> + setUpClass() </td></tr>
<tr><td align="left" balign="left"> + tearDownClass() </td></tr>
<tr><td align="left" balign="left"> + setUp() </td></tr>
<tr><td align="left" balign="left"> + tearDown() </td></tr>
<tr><td align="left" balign="left"> + constructor_shouldInitExecutors() </td></tr>
		</table></td></tr>
		</table>>, URL="./GameHandlerConstructorTest.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// com.github.tilastokeskus.matertis.core.DifficultyTest
	c36 [label=<<table title="com.github.tilastokeskus.matertis.core.DifficultyTest" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./DifficultyTest.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> DifficultyTest </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + DifficultyTest() </td></tr>
<tr><td align="left" balign="left"> + setUpClass() </td></tr>
<tr><td align="left" balign="left"> + tearDownClass() </td></tr>
<tr><td align="left" balign="left"> + setUp() </td></tr>
<tr><td align="left" balign="left"> + tearDown() </td></tr>
<tr><td align="left" balign="left"> + method_toString_doesCapitalizeName() </td></tr>
		</table></td></tr>
		</table>>, URL="./DifficultyTest.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// com.github.tilastokeskus.matertis.core.CommandHandlerTest
	c37 [label=<<table title="com.github.tilastokeskus.matertis.core.CommandHandlerTest" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./CommandHandlerTest.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> CommandHandlerTest </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + CommandHandlerTest() </td></tr>
<tr><td align="left" balign="left"> + setUpClass() </td></tr>
<tr><td align="left" balign="left"> + tearDownClass() </td></tr>
<tr><td align="left" balign="left"> + setUp() </td></tr>
<tr><td align="left" balign="left"> + tearDown() </td></tr>
<tr><td align="left" balign="left"> + method_rebindCommand_shouldRebindCommandIfCommandIDExists() </td></tr>
<tr><td align="left" balign="left"> + method_getBinding_shouldReturnCorrectBinding() </td></tr>
<tr><td align="left" balign="left"> + method_getBoundCommand_shouldReturnCorrectCommand() </td></tr>
<tr><td align="left" balign="left"> + method_executeCommand_shouldExecuteCorrectCommand() </td></tr>
<tr><td align="left" balign="left"> + method_executeBoundCommand_shouldExecuteCorrectCommand() </td></tr>
		</table></td></tr>
		</table>>, URL="./CommandHandlerTest.html", fontname="arial", fontcolor="black", fontsize=10.0];
}

